services: 
  kafka:
    image: bitnami/kafka:3.8.0
    container_name: kafka
    restart: unless-stopped
    networks:
      - realtime-streaming-pipeline
    ports: 
    # expose for external clients, internal clients use kafka:9092 
      - 9094:9094
    environment:
      # KRaft settings
      KAFKA_CFG_NODE_ID: 0
      KAFKA_CFG_PROCESS_ROLES: controller,broker
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: 0@kafka:9093
      # Listeners
      KAFKA_CFG_LISTENERS: PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,EXTERNAL://localhost:9094
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: CONTROLLER

  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui:v0.7.2
    restart: unless-stopped
    ports:
    - 15130:8080
    networks:
      - realtime-streaming-pipeline
    depends_on:
      - kafka
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: PLAINTEXT://kafka:9092
      DYNAMIC_CONFIG_ENABLED: 'true'
    
  streaming-postgres:
    container_name: streaming-postgres
    image: postgres:15
    restart: unless-stopped
    depends_on:
      - kafka
    ports:
      - 15432:5432
    networks:
      - realtime-streaming-pipeline
    env_file:
      - /.env.dev
    environment:
      POSTGRES_DB: realtime_data

networks:
  realtime-streaming-pipeline:
    driver: bridge